// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyLastApi.Migrations;

#nullable disable

namespace MyLastApi.Migrations
{
    [DbContext(typeof(ContasContext))]
    partial class ContasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyLastApi.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataNasc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "08995228407",
                            DataNasc = new DateTime(1992, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "60671150006",
                            DataNasc = new DateTime(1963, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Fatima"
                        },
                        new
                        {
                            Id = 3,
                            Cpf = "47633984074",
                            DataNasc = new DateTime(1980, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Orlando"
                        });
                });

            modelBuilder.Entity("MyLastApi.Models.ContaBancaria", b =>
                {
                    b.Property<int>("IdConta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConta"));

                    b.Property<bool>("Ativa")
                        .HasColumnType("bit");

                    b.Property<bool>("Bloqueada")
                        .HasColumnType("bit");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<decimal>("LimiteDiario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdConta");

                    b.HasIndex("ClienteId");

                    b.ToTable("Contas");

                    b.HasData(
                        new
                        {
                            IdConta = 1,
                            Ativa = true,
                            Bloqueada = false,
                            ClienteId = 1,
                            LimiteDiario = 0m,
                            Saldo = 0m
                        },
                        new
                        {
                            IdConta = 2,
                            Ativa = true,
                            Bloqueada = false,
                            ClienteId = 2,
                            LimiteDiario = 0m,
                            Saldo = 0m
                        },
                        new
                        {
                            IdConta = 3,
                            Ativa = true,
                            Bloqueada = false,
                            ClienteId = 3,
                            LimiteDiario = 0m,
                            Saldo = 0m
                        });
                });

            modelBuilder.Entity("MyLastApi.Models.Operacao", b =>
                {
                    b.Property<int>("IdOperacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOperacao"));

                    b.Property<DateTime>("DataOperacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoOperacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Valor")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("Versao")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("IdOperacao");

                    b.ToTable("Operacoes");
                });

            modelBuilder.Entity("MyLastApi.Models.ContaBancaria", b =>
                {
                    b.HasOne("MyLastApi.Model.Usuario", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
